name: CD
on:
  push:
    branches: [main]
jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run semantic-release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          RELEASE_OUTPUT=$(npx semantic-release)
          echo "RELEASE_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          if echo "$RELEASE_OUTPUT" | grep -q "Published release"; then
            echo "NEW_RELEASE=true" >> $GITHUB_ENV
            VERSION=$(node -p "require('./package.json').version")
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "NEW_RELEASE=false" >> $GITHUB_ENV
          fi

      - name: Set up QEMU
        if: ${{ env.NEW_RELEASE == 'true' }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        if: ${{ env.NEW_RELEASE == 'true' }}
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: ${{ env.NEW_RELEASE == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        if: ${{ env.NEW_RELEASE == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/block-alert:${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/block-alert:latest
          platforms: linux/amd64,linux/arm64,linux/arm/v7
